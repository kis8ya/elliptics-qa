{
    "params": {
        "check_timeout": 10
    },
    "runs": [
        {
            "description": "Checks that after starting single node with a single disabled backend there will not be routing entries about this backend.",
            "test_name": "test_routing-table_start_with_single_disabled_backend",
	    "params": {
                "backends_number": 1,
                "backends_enabled": [[false]]
	    },
            "path": "elliptics/test_routing-table_at_start.run"
        },
        {
            "description": "Checks that after enabling single backend for a single node there will be routing entries about this backend.",
            "test_name": "test_routing-table_enable_single_backend",
	    "params": {
                "backends_number": 1,
                "backends_enabled": [[false]]
	    },
            "path": "elliptics/test_routing-table_enable_backends.run"
        },
        {
            "description": "Checks that after starting single node with 3 disabled backends there will not be routing entries about any of these backends.",
            "test_name": "test_routing-table_start_with_disabled_backends",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[false, false, false]]
	    },
            "path": "elliptics/test_routing-table_at_start.run"
        },
        {
            "description": "Checks that after enabling 3 backends for a single node there will be routing entries about all of these backends.",
            "test_name": "test_routing-table_enable_backends",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[false, false, false]]
	    },
            "path": "elliptics/test_routing-table_enable_backends.run"
        },
        {
            "description": "Checks that after enabling 1 of 3 backends for a single node there will be routing entries about this backend and there will not be routing entries about the rest.",
            "test_name": "test_routing-table_enable_one_backend",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[false, false, false]]
	    },
            "path": "elliptics/test_routing-table_enable_one_backend.run"
        },
        {
            "description": "Checks that after starting single node with a single backend there will be routing entries about this backend.",
            "test_name": "test_routing-table_start_with_single_backend",
	    "params": {
                "backends_number": 1,
                "backends_enabled": [[true]]
	    },
            "path": "elliptics/test_routing-table_at_start.run"
        },
        {
            "description": "Checks that after disabling single backend for a single node there will not be routing entries about this backend.",
            "test_name": "test_routing-table_disable_single_backend",
	    "params": {
                "backends_number": 1,
                "backends_enabled": [[true]]
	    },
            "path": "elliptics/test_routing-table_disable_backends.run"
        },
        {
            "description": "Checks that after starting single node with 3 backends there will be routing entries about all of these backends.",
            "test_name": "test_routing-table_start_with_backends",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[true, true, true]]
	    },
            "path": "elliptics/test_routing-table_at_start.run"
        },
        {
            "description": "Checks that after disabling 3 backends for a single node there will not be routing entries about any of these backends.",
            "test_name": "test_routing-table_disable_backends",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[true, true, true]]
	    },
            "path": "elliptics/test_routing-table_disable_backends.run"
        },
        {
            "description": "Checks that after disabling 1 of 3 backends for a single node there will not be routing entries about this backend and there will be routing entries about the rest.",
            "test_name": "test_routing-table_disable_one_backend",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[true, true, true]]
	    },
            "path": "elliptics/test_routing-table_disable_one_backend.run"
        },
        {
            "description": "Checks that after starting single node with 3 backends with mixed states there will be routing entries about all of enabled backends and there will not be routing entries about any of disabled backends.",
            "test_name": "test_routing-table_start_with_one_disabled_backend",
	    "params": {
                "backends_number": 3,
                "backends_enabled": [[true, false, true]]
	    },
            "path": "elliptics/test_routing-table_at_start.run"
        }

    ],
    "test_env_cfg": {
        "clients": {
            "count": 1,
            "flavor": "m1.small"
        },
        "servers": {
            "count_per_group": [1],
            "flavor": "i2.small"
        },
	"setup_playbook": "tests/setup-test",
	"teardown_playbook": "tests/teardown-test"
    },
    "tags": ["routing-table", "pull-request", "testing-packages"]
}
